@model RecordsManageViewModel

@{
	ViewBag.Title = "Upload";
}

<div class="wrapper wrapper-content">

	<div class="row">

		<div class="col-md-6">
			<div class="panel panel-default">
				<div class="panel-heading">
					<h3 class="panel-title">Current Database Statistics</h3>
				</div>
				<div class="panel-body">
					<p>The below values are values returned directly from the database. Use these to verify the integrity of the database.</p>
				</div>
				<table class="table">
					<tbody>
						<tr>
							<th>Total Records</th>
							<td class="totalRecords" >@Model.TotalRecords</td>
						</tr>
						<tr>
							<th>Last Entry Date</th>
							<td>@Model.LastEntryTimestamp.GetValueOrDefault().ToString("g")</td>
						</tr>
						<tr>
							<th>Database Size</th>
							<td>@(Model.DatabaseSize / 1024 / 1024) MB</td>
						</tr>
					</tbody>
				</table>
			</div>
		</div>
		<div class="col-md-6">

			<div class="panel panel-default">
				<div class="panel-heading">
					<h3 class="panel-title">Database Operations</h3>
				</div>
				<div class="panel-body">

					<div class="btn-group btn-group-justified" role="group">
						<div class="btn-group" role="group">
							<a href="#" class="btn btn-primary populate">Populate</a>
						</div>
						<div class="btn-group" role="group">
							<a href="#" class="btn btn-danger delete">Delete</a>
						</div>
					</div>
					<hr />
					<div>
						<p><strong>Populate</strong> will take the database and fill it with value, regardless if the database has value in it or not.</p>
						<p><strong>Delete</strong> will do just that, it will delete the contents of the database, allowing <strong>populate</strong> to fill it with data.</p>
					</div>

					<div class="row">
						<div class="col-md-12">
							<div class="progress">
								<div class="progress-bar" role="progressbar" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100" style="width: 0%; min-width: 2em;">0%</div>
							</div>
						</div>
					</div>

				</div>
			</div>

		</div>

	</div>

	

</div>

@section Styles {
	@Styles.Render("~/plugins/jasnyBootstrapStyles")
}

@section Scripts {
	@Scripts.Render("~/plugins/jasnyBootstrap")

	<!--Reference the SignalR library. -->
	<script src="~/Scripts/jquery.signalR-2.2.1.min.js"></script>
	<!--Reference the autogenerated SignalR hub script. -->
	<script src="~/signalr/hubs"></script>

	<script type="text/javascript">
		(function () {

			var popBtn = $('.populate');
			var delBtn = $('.delete');
			var pBar = $('.progress-bar');

			var isBusy = false;
			var makeBusy = function () {
				isBusy = true;
				popBtn.attr('disabled', 'disabled');
				delBtn.attr('disabled', 'disabled');
			};
			var resetBusy = function () {
				isBusy = false;
				popBtn.removeAttr('disabled');
				delBtn.removeAttr('disabled');
			};

			var setProgress = function (pos, total) {
				var value = (pos / total) * 100;
				pBar.css('width', value + '%').attr('aria-valuenow', value).text(value + '%');
			};

			// Reference the auto-generated proxy for the hub.
			var hub = $.connection.logFileProcessingHub;

			hub.client.ProcessFileStart = function () {
				console.log("Upload Processing Started");
				setProgress(0, 1);
			};

			hub.client.ProcessFileProgress = function (pos, total) {
				console.log("Upload Processing Status: ", pos, total);
				setProgress(pos, total);
			};

			hub.client.ProcessFileComplete = function () {
				console.log("Upload Processing Copmplete!");
				setProgress(1, 1);
				resetBusy();
			};

			hub.client.ProcessFileError = function (errorMsg) {
				console.log("Upload Processing ERORR: ", errorMsg);
				resetBusy();
			};


			$.connection.hub.start().done(function () {
				console.log('SignalR Started');


				// Populate Action

				popBtn.on('click', function (e) {
					e.preventDefault();

					var elem = $(this);

					if (isBusy) return;
					makeBusy();

					console.log('Populating...');

					// Perform ajax to populate the tables
					$.ajax({
						url: "@Url.Action("populate", "Records")",
						success: function (data) {
							var path = data.path;
							console.log(path);
							hub.server.processFile(path);
						}
					});
				});

				delBtn.on('click', function (e) {
					e.preventDefault();

					var elem = $(this);
					
					if (isBusy) return;
					makeBusy();

					console.log('Deleteing...');

					// Perform ajax to populate the tables
					$.ajax({
						url: "@Url.Action("delete", "Records")",
						success: function (data) {
							console.log(data);
							hub.server.clearDB();
						}
					});
				});


			});

		})();
	</script>
}
