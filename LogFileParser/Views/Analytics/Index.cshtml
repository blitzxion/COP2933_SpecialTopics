
<div class="wrapper wrapper-content">

	<div class="row">

		<div class="col-md-12">
			<canvas id="data-chart" height="120"></canvas>
		</div>

		<hr />

		<div class="col-md-12">

			<div class="panel panel-default">

				<div class="panel-heading">
					<h3 class="panel-title">Data Table</h3>
				</div>

				<div class="panel-body">
					<div class="row">
						<div class="col-md-6">
							<div class="form-group">
								<label class="control-label">Start Date\Time</label>
								<div class="input-group date" id="start_date" data-input="datetimepicker">
									<input type="text" class="form-control" placeholder="Start date/time" />
									<span class="input-group-addon">
										<span class="glyphicon glyphicon-calendar"></span>
									</span>
								</div>
							</div>
						</div>
						<div class="col-md-6">
							<div class="form-group">
								<label class="control-label">End Date\Time</label>
								<div class="input-group date" id="end_date" data-input="datetimepicker">
									<input type="text" class="form-control" placeholder="End date/time" />
									<span class="input-group-addon">
										<span class="glyphicon glyphicon-calendar"></span>
									</span>
								</div>
							</div>
						</div>
					</div>
				</div>


				<div class="table-responsive">
					<table class="table table-striped table-bordered table-hover" data-url="@Url.Action("GetRecords","Records")" width="100%">
						<thead>
							<tr>
								<th data-field="timestampUTC" data-can-filter="false">Date\Time UTC</th>
								<th data-field="messageClass" data-can-filter="true">Message Class</th>
								<th data-field="sendingIP" data-can-filter="true">Sending IP</th>
								<th data-field="receivingIP" data-can-filter="true">Receiving IP</th>
								<th data-field="country" data-can-filter="true">Country</th>
							</tr>
						</thead>
						<tbody></tbody>
						<tfoot>
							<tr>
								<th></th>
								<th data-field="messageClass">Message Class</th>
								<th data-field="sendingIP">Sending IP</th>
								<th data-field="receivingIP">Receiving IP</th>
								<th data-field="country">Country</th>
							</tr>
						</tfoot>
					</table>
				</div>

			</div>


		</div>

	</div>

</div>


@section Styles {
	@Styles.Render("~/Content/bs-datetimepicker")
	@Styles.Render("~/Content/plugins/dataTables")

	<style>
		.table tbody tr td:not(:first-child) {
			text-decoration: underline;
			cursor: pointer;
		}

		.overlay {
			position: absolute;
			left: 0;
			top: 0;
			width: 100%;
			height: auto;
			z-index: 1;
			opacity: 0.6;
		}
	</style>

}

@section Scripts {
	@Scripts.Render("~/bundles/bs-datetimepicker")
	@Scripts.Render("~/plugins/dataTables")
	@Scripts.Render("~/plugins/chartJs")

	<script>
		(function () {

			// Chart
			var chartElem = $('#data-chart');

			var chartConfig = {
				type: 'polarArea',
				data: {
					labels: [],
					datasets: [{
						label: "Message Types",
						data: [0]
					}]
				},
				options: {
					responsive: true,
				}
			};

			$(window).on('change', function (e) {
				//fitToContainer(chartElem[0]);
				if (chart)
					chart.resize();
			}).trigger('change');


			var chart = new Chart(chartElem, chartConfig);

			$('[data-input="datetimepicker"]').datetimepicker({
				sideBySide: true,
				useCurrent: false
			});

			$("#start_date").on("keyup blur change dp.change", function (e) {
				$('#end_date').data("DateTimePicker").minDate(e.date);
				dTable.draw();
			});

			$("#end_date").on("keyup blur change dp.change", function (e) {
				$('#start_date').data("DateTimePicker").maxDate(e.date);
				dTable.draw();
			});

			// The base Table
			var table = $('table[data-url]');

			// Addin search inputs to the footer of each column that has a data-field
			table.find('tfoot tr th[data-field]').each(function () {
				var title = $(this).text();
				$(this).html($("<input/>", { type: "text", placeholder: "Search " + title }));
			});

			// Generate the crazy DataTable
			var dTable = table.DataTable({
				lengthMenu: [[10, 25, 50, 100, 1000], [10, 25, 50, 100, 1000]], // Change up the display options
				processing: true, // Show a loading overlay
				serverSide: true, // Disables client side filtering, requires the server to do it all
				responsive: true, // Not sure if this even works...

				// The ajax-y feel to the table
				ajax: {
					url: table.data('url'),
					dataType: 'json',
					type: "POST",
					// The following are extra fields added to the underlying data object
					data: function (d) {
						var fromDate = $('#start_date').data("DateTimePicker").date();
						var toDate = $('#end_date').data("DateTimePicker").date()

						d.fromDate = fromDate ? fromDate.toISOString() : null;
						d.toDate = toDate ? toDate.toISOString() : null;
						return d;
					}
				},

				// Formatting the Date field
				columnDefs: [{
					targets: 0,
					render: $.fn.dataTable.render.moment('YYYY-MM-DDTHH:mm:ss', 'MM/DD/YYYY h:mm:ss A')
				}],

				// Loading in the columns we care, and then have some subtle rendering
				columns: $('thead tr th[data-field]').map(function () {
					return {
						data: $(this).data('field'),
						name: $(this).text(),
						searchable: $(this).data('can-filter') == true
					};
				})
			});

			// When they click on a cell, I want to do a strict search on what they clicked by adding it the footer input.
			dTable.on('click', 'td', function (e) {
				var cell = dTable.cell(this);
				var cell_clicked = cell.data();
				var column_footer = dTable.column(this).footer();
				$(column_footer).find('input').val("\"" + cell_clicked + "\"").trigger("change");
			});

			// Since the inputs don't have knowlege of the column to perform a search on,
			// use the jQuery DataTable's columns() call to get all the columns, and add the event to the input
			dTable.columns().every(function () {
				var column = this;
				$('input', column.footer()).on('keyup change', function () {
					column.search(this.value).draw();
				});
			});

			//dTable.on('xhr.dt', function (a, b, c) { console.log(a, b, c); });

			// Event to tell the chart to start rending the new data
			var colorHash = new ColorHash({ lightness: [0.35, 0.5, 0.65] });
			dTable.on('draw.dt', function (e, settings) {
				var api = new $.fn.dataTable.Api(settings);
				var data = api.rows().data();

				var eData = Enumerable.From(data);
				var chartLabels = eData.Select(function (x) { return x.messageClass; }).Distinct().ToArray();
				var chartDataValues = eData.GroupBy("$.messageClass").Select("$.Count()").ToArray();
				var chartColors = chartLabels.map(function (x) { return colorHash.hex(x); });

				chartConfig.data.labels = chartLabels;
				chartConfig.data.datasets[0] = {
					data: chartDataValues,
					backgroundColor: chartColors,
				};

				chart.update();
			});

			dTable.on('processing.dt', function (e, settings, processing) {
				$('.overlay').toggle(processing);
				chartElem.toggle(!processing);
			});


			function fitToContainer(canvas) {
				canvas.style.width = '100%';
				canvas.style.height = '100%';
				canvas.width = canvas.offsetWidth;
				canvas.height = canvas.offsetHeight;
			}

		})();


	</script>
}
