@model RecordMetrics

@{
    ViewBag.Title = $"{Model.Name} Details";
}

<div class="wrapper wrapper-content animated fadeInRight">

    <h1>@Model.Name</h1>

    <div class="row">

        <div class="col-md-4">
            <div class="panel panel-default">
                <div class="panel-heading">
                    <h3 class="panel-title">Details</h3>
                </div>
                <table class="table table-condensed table-striped table-hover">
                    <tbody>
                        <tr><td>Total Messages Sent</td><td>@Model.Total</td></tr>
                        <tr><td>Average Messages Sent</td><td>@Model.Average</td></tr>
                        <tr><td>Message Stnd. Deviation</td><td>@Model.StdDev</td></tr>
                        <tr><td>Most Sent By Country</td><td>'@Model.MostUsed.Name' (@Model.MostUsed.Total)</td></tr>
                        <tr><td>Least Sent By Country</td><td>'@Model.LeastUsed.Name' (@Model.LeastUsed.Total)</td></tr>
                    </tbody>
                </table>
            </div>
        </div>

        <div class="col-md-8">
            <div class="panel panel-default">
                <div class="panel-heading">
                    <h3 class="panel-title">Overall Trends</h3>
                </div>

                <div class="tabs-container">
                    <ul class="nav nav-tabs">
                        <li class="active"><a data-toggle="tab" href="#tab-1">Chart</a></li>
                        <li><a data-toggle="tab" href="#tab-2">Data</a></li>
                    </ul>

                    <div class="tab-content">
                        <div id="tab-1" class="tab-pane active">
                            <div class="panel-body">
                                <div class="chart-container col-md-12" style="margin-bottom:50px">
                                    <div class="trend-chart" style="height:500px;" data-chart-data="@Json.Encode(Model.FlattenData)">
                                        @Html.Partial("_Loading")
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div id="tab-2" class="tab-pane">
                            <table class="datatable table table-condensed table-striped">
                                <thead>
                                    <tr>
                                        <th>Date</th>
                                        <th>Total</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in Model.FlattenData.OrderBy(x => x.Timestamp))
                                    {
                                        <tr>
                                            <td>@item.Timestamp.ToString("yyyy-MM-ddTHH:mm:ss")</td>
                                            <td>@item.Total</td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>

                </div>

            </div>
        </div>

    </div>

</div>

@section Styles {
    @Styles.Render("~/Content/plugins/dataTables")
}

@section Scripts {
    @Scripts.Render("~/plugins/jqcanvasjs")
    @Scripts.Render("~/bundles/momentjs")
    @Scripts.Render("~/plugins/dataTables")

    <script>
        (function () {


            function LoadChart()
            {
                var chartElem = $('.chart-container').find('.trend-chart');

                var chartData = Enumerable.From(chartElem.data('chart-data')).Select(function (e) {
                    var dataDate = e.Timestamp || e.timestamp;
                    var dataTotal = e.Total || e.total;

                    var date = moment(dataDate).toDate(); // new Date(parseInt(dataDate.substr(6)));
                    var total = dataTotal;
                    return { x: date, y: total };
                });

                var regData = Enumerable.From(chartData).Select("[moment($.x).unix(), $.y]").ToArray();
                var rDataLine = regression('linear', regData);
                var lineData = Enumerable.From(rDataLine.points).Select("{x:moment.unix($[0]).toDate(), y:$[1]}").ToArray();


                var chartDataArray = chartData.ToArray();

                if (chartDataArray.length > 0) // Sanity
                    chartDataArray[chartDataArray.length - 1].markerSize = 10;

                var axisConfig = { tickLength: 0, margin: 0, lineThickness: 0, gridThickness: 0, valueFormatString: " " };

                chartElem.CanvasJSChart({
                    legend: {
                        cursor: "pointer",
                        itemclick: function (e) {
                            e.dataSeries.visible = !(typeof (e.dataSeries.visible) === "undefined" || e.dataSeries.visible);
                            e.chart.render();
                        }
                    },
                    data: [
                        {
                            type: 'column',
                            //markerSize: 0,
                            dataPoints: chartDataArray,
                        },
                        {
                            type: "line",
                            markerSize: 0,
                            color: "gray",
                            dataPoints: lineData
                        }
                    ]
                });
            }

            function LoadMessageChart()
            {
                var chartElem = $('.messages-chart');
                var chartDataPrep = Enumerable.From(chartElem.data('chart-data'));
                var chartData = chartDataPrep.OrderBy("$.Date").GroupBy("$.MessageClass", null, function (key, g) {
                    return {
                        type: "stackedColumn",
                        showInLegend: "true",
                        legendText: key,
                        dataPoints: g.OrderBy("moment($.Date).toDate()").Select(function (e) {
                            return {
                                x: moment(e.Date).toDate(),
                                y: e.Total,
                                name: key
                            };
                        }).ToArray()
                    }
                });

                chartElem.CanvasJSChart({
                    toolTip: { content: "{name}: {y}" },
                    legend: {
                        cursor: "pointer",
                        itemclick: function (e) {
                            e.dataSeries.visible = !(typeof (e.dataSeries.visible) === "undefined" || e.dataSeries.visible);
                            e.chart.render();
                        }
                    },
                    data: chartData.ToArray()
                });
            }


            LoadChart();

            $('.datatable').each(function () {
                $(this).DataTable({
                    columnDefs: [{
                        targets: 0,
                        render: $.fn.dataTable.render.moment('YYYY-MM-DDTHH:mm:ss', 'MM/DD/YYYY')
                    }]
                });
            });

        })();
    </script>
}