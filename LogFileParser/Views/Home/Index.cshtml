@{
	ViewBag.Title = "RTS Log Parsing Project";
}

<div class="wrapper wrapper-content animated fadeInRight">

	<div class="row">
		<div class="col-lg-12">

			<div class="text-center m-t-lg">
				<h1>Current Metrics From Log</h1>
				<small>Don't worry, be happy.</small>
			</div>

		</div>
	</div>

	<hr />

	<div class="row">

		<div class="col-md-4">
			<div class="panel panel-default">
				<div class="panel-heading">
					<h3 class="panel-title">Messages (Heatmap)</h3>
				</div>
				<div class="panel-body">
					<div class="form-inline">
						<div class="form-group">
							<select class="form-control calendar-heatmap-messagetype"></select>
						</div>
						<button class="btn btn-default calendar-heatmap-previous"><span class="glyphicon glyphicon-backward"></span> Previous</button>
						<button class="btn btn-default calendar-heatmap-next">Next <span class="glyphicon glyphicon-forward"></span></button>
					</div>
					<hr />
					<div class="calendar-heatmap"></div>
				</div>
			</div>
		</div>

		<div class="col-md-4">
			<div class="panel panel-default">
				<div class="panel-heading">
					<h3 class="panel-title">Message Trends</h3>
				</div>
				<div class="panel-body">
					<p>TBA</p>
				</div>
			</div>
		</div>

		<div class="col-md-4">
			<div class="panel panel-default">
				<div class="panel-heading">
					<h3 class="panel-title">Message Statistics</h3>
				</div>
				<div class="panel-body">
					<p>TBA</p>
				</div>
			</div>
		</div>

	</div>

</div>

@section Styles {
	@Styles.Render("~/Content/plugins/dataTables")
	@Styles.Render("~/Content/plugins/calHeatmap")

}

@section Scripts {
	@*Scripts.Render("~/plugins/chartJs")
		@Scripts.Render("~/plugins/jqcanvasjs")*@

	@Scripts.Render("~/bundles/momentjs")
	@Scripts.Render("~/bundles/d3v3");
	@Scripts.Render("~/bundles/plugins/calHeatmap");
	@Scripts.Render("~/plugins/dataTables")

	<script>
		(function () {

			///////////////////////////
			// Main Stuff
			///////////////////////////

			var msgTypesURL = "@Url.Action("GetMessageClasses", "Records")";
			var msgDataURL = "@Url.Action("GetDateGroupedMessages", "Records")";

			var messageTypes = [];

			LoadOptionsFromUrl(msgTypesURL, $('.calendar-heatmap-messagetype'), "- All -")
				.then(function (typeData) { messageTypes = typeData; })
				.then(function () { return GetData(msgDataURL); })
				.catch(function (err) { console.log("Error", err); })
				.then(function (msgData) { BuildHeatmap(msgData); })



			//////////////////
			// Methods
			//////////////////

			function BuildHeatmap(data) {

				console.log(data);

				var cal = new CalHeatMap();
				cal.init({
					// data: data,
					itemSelector: ".calendar-heatmap",
					domain: "day",
					subDomain: "hour",
					rowLimit: 1,
					domainGutter: 0,
					cellSize: 15,
					cellPadding: 5,
					range: 7,
					verticalOrientation: true,
					label: { position: "left", offset: { x: 20, y: 12 }, width: 110 },
					legend: [1, 2, 3, 4],
					legendColors: ["#ecf5e2", "#232181"],
					nextSelector: ".calendar-heatmap-next",
					previousSelector: ".calendar-heatmap-previous"
				});
			}


			//////////////////
			// Utils
			//////////////////

			function GetData(url, data) {
				if (url == undefined) return Promise.reject("No url");
				return new Promise(function (resolve, reject) {
					$.ajax({ url: url, dataType: 'json', data: data, type:(data) ? "POST" : "GET" })
					.done(function (data) { resolve(data); })
					.fail(function (err) { reject(err); });
				});
			}

			function LoadOptionsFromUrl(url, element, emptyText) {
				return GetData(url).then(function (data) {

					data = JSON.parse(data);

					if (emptyText)
						$('<option/>', { text: emptyText }).appendTo(element);

					$.each(data, function (i, obj) {
						$('<option/>', {
							value: obj,
							text: obj
						}).appendTo(element);
					});

					return data;

				});
			}

		})();
	</script>

}